# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build

on:
  push:
    branches: [develop, main]
  pull_request:
    branches: [develop, main]

jobs:
  build:
    name: Test & Build (OS=${{ matrix.os.name }}, Nodejs=v${{ matrix.node-version }})
    runs-on: ${{ matrix.os.id }}
    
    strategy:
      matrix:
        os:
          - id: windows-2022
            name: Windows Server 2022
          - id: windows-2019
            name: Windows Server 2019
          - id: ubuntu-20.04
            name: Ubuntu Focal LTS
          - id: ubuntu-18.04
            name: Ubuntu Bionic LTS
          - id: macos-11
            name: macOS Big Sur
          - id: macos-10.15
            name: macOS Catalina

        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2
        name: Checkout repository

      - name: Turbo Cache
        id: turbo-cache
        uses: actions/cache@v2
        with:
          path: node_modules/.cache/turbo
          key: turbo-${{ github.job }}-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ github.job }}-${{ github.ref_name }}-
      - name: Cache npm dependencies
        uses: actions/cache@v2
        with:
          path: '~/.npm'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      
      - run: npm ci
        name: Install npm packages

      - run: npm exec eslint -- .
        name: Perform lint checking

      - run: npm run build
        name: Building application
        env:
          NEXT_PUBLIC_ANALYTICS_ID: ${{ secrets.ANALYTICS_ID }}

      - run: npm run test
        name: Unit testing
        
      - name: Deploy
        if: (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main') 
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          publish_dir: ./apps/docs/out
